//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;

/// <summary>
/// ObjectFinder
/// This class is mostly for finding components and adding them if they arent found.
/// Providing the same service for GameObjects is less desirable.
/// Providing the same service for Objects in general using 'default(T)' may be good.
/// Maintenance: Do not add variables, limit this class to FUNCTIONS.
/// Sacrifice performance to maintain this function-only pattern
/// (Replace with better system when possible, Unity is not good with static)
/// </summary>
public static class ObjectFinder
{
	/// <summary>
	/// Used internally to host (be a container for) components we couldn't find
	/// </summary>
	/// <returns>An "ObjectFinder" GameObject</returns>
	private static GameObject FindOrCreateObjectFinder ()
	{
		//Determine the name of 'ObjectFinder' dynamically
		Type mine = typeof(ObjectFinder);
		string name = mine.Name;
		GameObject helper = GameObject.Find (name);
		//It should not find it the first time, so make a primitive
		if (helper == null) {
			//TODO: Hide this primitive
			helper = GameObject.CreatePrimitive (PrimitiveType.Quad);
			helper.name = name;
		}
		return helper;
	}

	/// <summary>
	/// Finds the "Utilities" gameObject or creates one
	/// </summary>
	/// <returns>Utilities GameObject.</returns>
	public static GameObject FindOrCreateUtilities ()
	{
		var util = GameObject.Find ("Utilities");
		bool found = util != null;
		if (!found) {
			util = GameObject.CreatePrimitive (PrimitiveType.Quad);
			util.name = "Utilities";
			util.AddComponent<LevelLoader> ();
		}
		return util;
	}

	/// <summary>
	/// Finds a LevelLoader or
	/// Creates a Utilities GameObject with a LevelLoader attached.
	/// </summary>
	/// <returns>LevelLoader</returns>
	public static LevelLoader FindOrCreateLevelLoader ()
	{
		//look for any level loader
		LevelLoader loader = GameObject.FindObjectOfType < LevelLoader> ();
		if (loader == null) {
			GameObject util = FindOrCreateUtilities ();
			loader = util.AddComponent<LevelLoader> ();
		}
		return loader;
	}
	
	/// <summary>
	/// Finds a component or creates one inside of an
	/// ObjectFinder Game Object
	/// </summary>
	/// <returns>Component</returns>
	public static T FindOrCreateComponent<T> () where T : Component
	{
		T item = GameObject.FindObjectOfType <T> ();
		if (item == null) {
			GameObject finder = FindOrCreateObjectFinder();
			item = finder.AddComponent<T>();
		}
		return item;
	}
}
